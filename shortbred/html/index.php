<?php

require_once("../includes/main.inc.php");
require_once(__BASE_DIR__ . "/libs/ui.class.inc.php");
require_once(__BASE_DIR__ . "/libs/global_settings.class.inc.php");
require_once(__BASE_DIR__ . "/libs/user_auth.class.inc.php");

$user_email = "Enter your e-mail address";

$IsLoggedIn = false; // contains the email address if the user is logged in. for the UI.
$show_previous_jobs = false;
$jobs = array();
$training_jobs = array();
$IsAdminUser = false;
$IsExample = true;
$user_token = "";
$is_enabled = false;
$is_sb_enabled = false;

if (user_auth::has_token_cookie()) {
    $user_token = user_auth::get_user_token();
    $user_email = user_auth::get_email_from_token($db, $user_token);
    $IsAdminUser = user_auth::get_user_admin($db, $user_email);
    if ($user_email)
        $IsLoggedIn = $user_email;

    $is_sb_enabled = global_settings::get_shortbred_enabled();
    if ($is_sb_enabled) {
        $job_manager = job_manager::init_by_user($db, job_types::Identify, $user_token);
        //$job_manager = new job_manager($db, job_types::Identify);
        $is_enabled = $IsAdminUser || functions::is_shortbred_authorized($db, $user_token);

        if (settings::is_recent_jobs_enabled()) {
            $jobs = $job_manager->get_jobs_by_user($user_token);
            $training_jobs = $job_manager->get_training_jobs($user_token);
            $show_previous_jobs = count($jobs) > 0 || count($training_jobs) > 0;
        }
    }
}

$db_modules = global_settings::get_database_modules();
$use_advanced_options = global_settings::advanced_options_enabled();
$default_cdhit_id = settings::get_default_cdhit_id();
$default_ref_db = settings::get_default_ref_db();
$default_search = settings::get_default_identify_search();

$login_banner_msg = "";
if (!$IsLoggedIn) {
    $login_banner_msg = "Use of EFI-CGFP requires a user account. Login or " .
        "<a href=\"$SiteUrlPrefix/user_account.php?action=create\">create a user account</a>.";
} elseif (!$is_enabled && $is_sb_enabled) {
    $login_banner_msg = "To use EFI-CGFP, submit a request on the 'Run CGFP/ShortBRED' tab.";
}
$update_message = functions::get_update_message();
$update_message = ($login_banner_msg ? "$login_banner_msg<br>" : "") . $update_message;

if (!global_settings::get_shortbred_enabled()) {
    error404();
}

include("inc/header.inc.php");

?>



<p>
Chemically guided functional profiling (CGFP) maps metagenome protein abundance 
to clusters in sequence similarity networks (SSNs) generated by the EFI-EST web 
tool. 
</p>

<p>
EFI-CGFP uses the ShortBRED software package developed by Huttenhower and colleagues 
in two successive steps: 1) <b>identify</b> sequence markers that are unique to 
members of families in the input SSN that are identified by ShortBRED and share 
85% sequence identity using the CD-HIT algorithm (CD-HIT 85 clusters) and 2) 
<b>quantify</b> the marker abundances in metagenome datasets and then map these to the 
SSN clusters. 
</p>

<p>
Currently, a library of 380 metagenomes is available for analysis. The dataset 
originates from the Human Microbiome Project (HMP) and consists of metagenomes 
from healthy adult women and men from six body sites [stool, buccal mucosa 
(lining of cheek and mouth), supragingival plaque (tooth plaque), anterior 
nares (nasal cavity), tongue dorsum (surface), and posterior fornix (vagina)].
</p>

<?php if ($update_message) { ?>
<div id="update-message" class="update-message initial-hidden">
<?php echo $update_message; ?>
</div>
<?php } ?>

<div class="tabs-efihdr tabs">
    <ul class="tab-headers">
        <?php if ($show_previous_jobs) { ?>
            <li class="active"><a href="#jobs">Previous Jobs</a></li>
        <?php } ?>
        <li><a href="#create">Run CGFP/ShortBRED</a></li>
        <li <?php if (! $show_previous_jobs) echo "class=\"active\""; ?>><a href="#tutorial">Tutorial</a></li>
        <li><a href="#example">Example</a></li>
    </ul>

    <div class="tab-content">
        <?php if ($show_previous_jobs) { ?>
        <div id="jobs" class="tab active">
        <?php } ?>
        <?php if (count($jobs) > 0) { ?>
            <h4>CGFP Jobs</h4>
            <table class="pretty-nested" style="table-layout:fixed">
                <thead>
                    <th class="id-col">ID</th>
                    <th>Filename</th>
                    <th class="date-col">Date Completed</th>
                </thead>
                <tbody>
                    <?php
                    $allow_cancel = true;
                    show_jobs($jobs, $allow_cancel);
                    ?>
                </tbody>
            </table>
        <?php } ?>
            
        <?php if (count($training_jobs) > 0) { ?>
            <h4>Training Resources</h4>
            <table class="pretty-nested" style="table-layout:fixed">
                <thead>
                    <th class="id-col">ID</th>
                    <th>Filename</th>
                    <th class="date-col">Date Completed</th>
                </thead>
                <tbody>
                    <?php
                    $allow_cancel = false;
                    show_jobs($training_jobs, $allow_cancel);
                    ?>
                </tbody>
            </table>
        <?php } ?>
            
        <?php if ($show_previous_jobs) { ?>
        </div>
        <?php } ?>

        <div id="create" class="tab">
        <?php if ($is_enabled) { ?>
            <p>
            Upload the SSN for which you want to run CGFP/ShortBRED.
            The initial identify step will be performed: unique markers in the input SSN will be identified.
            </p>
    
            <p>
            </p>
    
            <form name="upload_form" id="upload_form" method="post" action="" enctype="multipart/form-data">
    
                <div class="primary-input">
                    <?php echo ui::make_upload_box("SSN File:", "ssn_file", "progress_bar", "progress_number", "", $SiteUrlPrefix); ?>
                    <p>
                    <b>The input SSN MUST be a Colored SSN generated with the Color SSN utility of EFI-EST or 
                    the colored SSN generated by EFI-GNT.</b>
                    The accepted format is XGMML (or compressed XGMML as zip).
                </div>

                <div class="option-panels">
                    <div id="seq-len-input">
                        <h3>Sequence Length Restriction Options</h3>
                        <div class="option-panel">
                            <p>
                            If the submitted SSN was generated using the UniRef90 or 50 option, then <b>it is
                            recommended to specify a minimum sequence length, in order to eliminate
                            fragments</b> that may be included in UniRef clusters. A maximum length can also
                            be specified.
                            </p>
                            <div>
                                <span class="input-name">
                                    Minimum:
                                </span>
                                <span class="input-field">
                                    <input name="ssn_min_seq_len" id="ssn_min_seq_len" type="text" size="7" /> (default: none)
                                </span>
                            </div>
                            <div>
                                <span class="input-name">
                                    Maximum:
                                </span>
                                <span class="input-field">
                                    <input name="ssn_max_seq_len" id="ssn_max_seq_len" type="text" size="7" /> (default: none)
                                </span>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h3>Marker Identification Options</h3>
                        <div class="option-panel">
                            <div>
                                Several parameters are available for the identify step.
                            </div>
                            <div>
                                <span class="input-name">
                                    Reference database:
                                </span>
                                <span class="input-field">
                                    <?php
                                       $ref_db_uniprot = $default_ref_db == "uniprot" ? "selected" : "";
                                       $ref_db_uniref90 = $default_ref_db == "uniref90" ? "selected" : "";
                                       $ref_db_uniref50 = $default_ref_db == "uniref50" ? "selected" : "";
                                    ?>
                                    <select name="ssn_ref_db" id="ssn_ref_db">
                                        <option value="uniprot" <?php echo $ref_db_uniprot; ?>>Full UniProt</option>
                                        <option value="uniref90" <?php echo $ref_db_uniref90; ?>>UniRef 90</option>
                                        <option value="uniref50" <?php echo $ref_db_uniref50; ?>>UniRef 50</option>
                                    </select>
                                </span>
                                <div class="input-desc">
                                    ShortBRED uses the UniProt, UniRef90 or UniRef50 databases to evaluate markers
                                    in order to eliminate those that could give false positives during the
                                    quantify step. The default database used in this process is UniRef90.
                                </div>
                            </div>
                            <div>
                                <span class="input-name">
                                    CD-HIT sequence identity (default <?php echo $default_cdhit_id; ?>%):
                                </span>
                                <span class="input-field">
                                    <input type="text" name="ssn_cdhit_sid" id="ssn_cdhit_sid" value="" size="4">
                                </span>
                                <div class="input-desc">
                                    This is the sequence identity parameter that will be used for determining the
                                    ShortBRED consensus sequence families.
                                </div>
                            </div>
        
                            <?php if (settings::get_diamond_enabled()) { ?>
                                <div>
                                    <span class="input-name">
                                        Sequence search type:
                                    </span>
                                    <span class="input-field">
                                        <?php
                                            $search_blast = $default_search == "BLAST" ? "selected" : "";
                                            $search_diamond = $default_search == "DIAMOND" ? "selected" : "";
                                        ?>
                                        <select name="ssn_search_type" id="ssn_search_type">
                                            <option <?php echo $search_blast; ?>>BLAST</option>
                                            <option <?php echo $search_diamond; ?>>DIAMOND</option>
                                        </select>
                                    </span>
                                    <div class="input-desc">
                                        This is the search algorithm that will be used to remove false positives and identify unique markers.
                                    </div>
                                </div>
        
                                <input type="hidden" name="ssn_diamond_sens" id="ssn_diamond_sens" value="normal" />
                            <?php } ?>
                        </div>
                    </div>
                    <?php if ($use_advanced_options) { ?>
                    <div>
                        <h3>Dev Site Options</h3>
                        <div class="option-panel">
                            <?php
                            if (count($db_modules) > 1) {
                                echo <<<HTML
                            <div>
                                <span class="input-name">
                                    Database version: 
                                </span>
                                <span class="input-field">
                                    <select name="ssn_db_mod" id="ssn_db_mod">
HTML;
                                foreach ($db_modules as $mod_info) {
                                    $mod_name = $mod_info[1];
                                    echo "                            <option value=\"$mod_name\">$mod_name</option>\n";
                                }
                                echo <<<HTML
                                    </select>
                                </span>
                            </div>
HTML;
                            } ?>
                        </div>
                    </div>
                    <?php } ?>
                </div>

                <p>
                    <span class="input-name">
                        E-mail address: 
                    </span>
                    <span class="input-field">
                        <input name="ssn_email" id="ssn_email" type="text" value="<?php echo $user_email; ?>" class="email" onfocus="if(!this._haschanged){this.value=''};this._haschanged=true;">
                    </span>
                </p>
                <p>
                    You will receive an email when the markers have been generated.
                </p>
    
                <div id="ssn_message" style="color: red">
                    <?php if (isset($message)) { echo "<h4 class='center'>" . $message . "</h4>"; } ?>
                </div>
                <?php if (!$IsAdminUser) { ?>
                    <div>
                        Multiple SSNs may be submitted, but due to resource constraints only one computation
                        will run at any given time.  Submitted jobs will be queued and executed when any
                        running job completes.
                    </div>
                <?php } ?>
                <center>
                    <div><button type="button" id="ssn_submit" name="ssn_submit" class="dark" onclick="uploadInitialSSNFile()">
                                Upload SSN
                        </button></div>
                    <div><progress id="progress_bar" max="100" value="0"></progress></div>
                    <div id="progress_number"></div>
                </center>
            </form>
        <?php } elseif ($IsLoggedIn) { ?>
            <div style="margin-top: 30px;"></div>
            <p>
                Due to the computationally-heavy nature of CGFP, we are granting
                access to the EFI-CGFP tool on a request basis.
            </p>
            <p>
                Please provide the information that 
                is requested below.  We will consider your application to become a member of 
                the EFI-CGFP user group based a description on your intended usage and our 
                assessment of whether it can be accommodated with the available computational 
                resources.  After consideration of your request, we will notify you of our 
                decision.
            </p>
            <form name="app_form" id="app_form" method="post" action="cgfp_apply.php" enctype="multipart/form-data">
                <table border="0" class="app">
                    <tbody>
                        <tr>
                            <td>Your name</td>
                            <td><input type="text" name="app_name" id="app_name" required /></td>
                        </tr>
                        <tr>
                            <td>Your institution</td>
                            <td><input type="text" name="app_institution" id="app_institution" required /></td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                Description of your intended use:<br>
                                <textarea name="app_desc" id="app_desc" cols="80" rows="20" required></textarea>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button type="submit" class="light">Submit Application</button>
            </form>
        <?php } else { ?>
            <div style="margin-top: 30px;"></div>
            <p>
                Due to the computationally-heavy nature of CGFP, we are granting access to the
                EFI-CGFP tool on a request basis.
            </p>
            <p>
                If you wish to use EFI-CGFP, you will need a user account and also be an
                approved member of the EFI-CGFP user group.  If you do not have a user
                account, please
                <a href="<?php echo $SiteUrlPrefix; ?>/user_account.php?action=create">create a user account</a>,
                login, and return to this page. If you have an account and are not logged
                in, please login and return to this page to submit an application to
                become a member of the EFI-CGFP user group.
            </p>
        <?php } ?>
        </div>

        <div id="tutorial" class="tab <?php if (!$show_previous_jobs) echo "active"; ?>">

            <h3>Chemically-Guided Functional Profiling Overview</h3>
            
            <p>
            Experimental assignment of functions to uncharacterized enzymes in predicted 
            pathways is expensive and time-consuming. Therefore, targets that are 'worth 
            the effort' must be selected. Balskus, Huttenhower and their coworkers 
            described 'chemically guided functional profiling' (CGFP). CGFP identifies SSN 
            clusters that are abundant in
            <a href="https://www.sciencedirect.com/topics/biochemistry-genetics-and-molecular-biology/metagenome">metagenome</a>
            datasets to prioritize targets for functional characterization.
            </p>
             
            <h3>EFI-CGFP Acceptable Input</h3>
            
            <p>
            The input for EFI-CGFP is a colored sequence similarity network (SSN).
            To obtain SSNs compatible with EFI-CGFP analysis, users need to be familiar 
            with both EFI-EST
            (<a href="../efi-est/">https://efi.igb.illinois.edu/efi-est/</a>)
            to generate SSNs for protein families, and Cytoscape
            (<a href="http://www.cytoscape.org/">http://www.cytoscape.org/</a>) to visualize, 
            analyze, and edit SSNs. Users should also be familiar with the EFI-GNT web tool 
            (<a href="../efi-gnt/">https://efi.igb.illinois.edu/efi-gnt/</a>)
            that colors SSNs, and collects, analyzes, and represents genome neighborhoods for bacterial and fungal 
            sequences in SSN clusters.
            </p>
            
            <h3>Principle of CGFP Analysis</h3>
             
            <p>
            EFI-CGFP uses the ShortBRED software package developed by Huttenhower and 
            colleagues in two successive steps: 1) <b>identify</b> sequence markers that are 
            unique to members of families in the input SSN that are identified by ShortBRED 
            and share 85% sequence identity using the CD-HIT algorithm (CD-HIT 85 clusters) 
            and 2) <b>quantify</b> the marker abundances in metagenome datasets and then map these 
            to the SSN clusters. 
            </p>
            
            <h3>EFI-CGFP Output</h3>
            
            <p>
            When the "Identify" step has been performed, several files are available. They 
            include: a SSN enhanced with the markers that have been identified and their 
            type as node attributes, additional files that describe the markers and
            the ShortBRED families that were used to identify them.
            </p>
            
            <p>
            After the "quantify" step has been performed, heatmaps summarizing the 
            quantification of metagenome hits per SSN clusters are available. Several 
            additional files are provided: the SSN enhanced with metagenome hits 
            that have been identified and quantification results given in abundance within
            metagenomes, per protein and per cluster.
            </p>
            
            <h3>Recommended Reading</h3>
            
            <p>
            R&eacute;mi Zallot, Nils Oberg, John A. Gerlt, <b>"Democratized" genomic enzymology web 
            tools for functional assignment</b>, Current Opinion in Chemical Biology, Volume 
            47, 2018, Pages 77-85,
            <a href="https://doi.org/10.1016/j.cbpa.2018.09.009">https://doi.org/10.1016/j.cbpa.2018.09.009</a>
            </p>
            
            <p>
            John A. Gerlt,
            <b>Genomic enzymology: Web tools for leveraging protein family sequence–function space and genome context to discover novel functions</b>,
            Biochemistry, 2017 - ACS Publications
            </p>

            <center><a href="tutorial_intro.php"><button class="light">Continue Tutorial</button></a></center>
        </div>

        <div id="example" class="tab">
            <p>
                This example recreates the CGFP analysis for the GRE family (IPR004184) as it was initially described by
                Levin, et al (2017; full reference below).
            </p>

            <p>
                The SSN was generated on EFI-EST with 
                InterPro 71 and UniProt 2018_10, with UniRef90 seed sequences.
                An alignment score of 300 and a minimum length filter of 500 AA was applied.
                As required, the obtained SSN was colored using the EFI-EST Color SSN utility prior to submission
                to EFI-CGFP for analysis.
            </p>
            <?php $HeatmapWidth = 860; ?>
            <?php include("stepe_example.php"); ?>
        </div>
    </div> <!-- tab-content -->
</div> <!-- tabs -->

<div id="cancel-confirm" title="Cancel the job?" style="display: none">
    <p>
    <span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>
    All progress will be lost.
    </p>    
</div>

<div id="archive-confirm" title="Archive the job?" style="display: none">
    <p>
    <span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>
    This job will be permanently removed from your list of jobs.
    </p>    
</div>

<div align="center">
    <?php if (settings::is_beta_release()) { ?>
    <h4><b><span style="color: red">BETA</span></b></h4>
    <?php } ?>

    <p>
    UniProt Version: <b><?php echo settings::get_uniprot_version(); ?></b><br>
    </p>
</div>

<script>
    $(document).ready(function() {
        <?php include("inc/stepe_script.inc.php"); ?>

        $(".tabs .tab-headers a").on("click", function(e) {
            var curAttrValue = $(this).attr("href");
            if (curAttrValue == "#example")
                handleTabPress("#heatmap-tabs", $("#heatmap-tabs .tab-headers .active a").first());
        });

        $(".cancel-btn").click(function() {
            var id = $(this).data("id");
            var key = $(this).data("key");
            var qid = $(this).data("quantify-id");
            if (!qid)
                qid = "";
            var requestType = "cancel";
            var jobType = "";

            $("#cancel-confirm").dialog({
                resizable: false,
                height: "auto",
                width: 400,
                modal: true,
                buttons: {
                    "Stop Job": function() {
                        requestJobUpdate(id, key, qid, requestType, jobType);
                        $( this ).dialog("close");
                    },
                    Cancel: function() {
                        $( this ).dialog("close");
                    }
                }
            });
        });
        
        $(".archive-btn").click(function() {
            var id = $(this).data("id");
            var key = $(this).data("key");
            var requestType = "archive";
            var qid = $(this).data("quantify-id");
            if (!qid)
                qid = "";
            var jobType = "";

            $("#archive-confirm").dialog({
                resizable: false,
                height: "auto",
                width: 400,
                modal: true,
                buttons: {
                    "Archive Job": function() {
                        requestJobUpdate(id, key, qid, requestType, jobType);
                        $( this ).dialog("close");
                    },
                    Cancel: function() {
                        $( this ).dialog("close");
                    }
                }
            });
        });
        
        $(".option-panels > div").accordion({
            heightStyle: "content",
            collapsible: true,
            active: false,
        });
        $("#seq-len-input").accordion("option", "active", 0);
        $(".tabs").tabs();

    });
</script>
<script src="<?php echo $SiteUrlPrefix; ?>/js/custom-file-input.js" type="text/javascript"></script>


<?php

function show_jobs($jobs, $allow_cancel) {
    $last_bg_color = "#eee";
    for ($i = 0; $i < count($jobs); $i++) {
        $key = $jobs[$i]["key"];
        $id = $jobs[$i]["id"];
        $name = $jobs[$i]["job_name"];
        $is_completed = $jobs[$i]["is_completed"];
        $date_completed = $jobs[$i]["date_completed"];
        $is_finished = $date_completed && $date_completed != "PENDING" && $date_completed != "RUNNING";
        $search_type = $jobs[$i]["search_type"];
        $ref_db = $jobs[$i]["ref_db"];
    
        $link_start = "";
        $link_end = "";
        $name_style = "";
        $id_field = $id;
        $quantify_id = "";
        $job_name = "";
        $job_info = "";
    
        if ($jobs[$i]["is_quantify"]) {
            $quantify_id = $jobs[$i]["quantify_id"];
            $title_str = "title=\"" . $jobs[$i]["full_job_name"] . "\"";
            if ($is_completed) {
                $link_start = "<a href=\"stepe.php?id=$id&key=$key&quantify-id=$quantify_id\" $title_str>";
                $link_end = "</a>";
            } else {
                $link_start = "<span $title_str>";
                $link_end = "</span>";
            }

            $par_text = "";
            if ($jobs[$i]["identify_parent_id"])
                $par_text = "Identify " . $jobs[$i]["id"] . "-";

            $name_style = "style=\"padding-left: 50px;\"";
            $job_name = $name;
            $job_info = "[${par_text}Quantify $quantify_id]";
            $id_field = "";
        } else {
            $link_start = $is_finished ? "<a href=\"stepc.php?id=$id&key=$key\">" : "";
            $link_end = $is_finished ? "</a>" : "";
            if ($last_bg_color == "#fff")
                $last_bg_color = "#eee";
            else
                $last_bg_color = "#fff";
            if ($jobs[$i]["identify_parent_id"]) {
                $job_name = "Child job of Identify " . $jobs[$i]["identify_parent_id"];
                $date_completed = "PENDING";
            } else {
                $job_name = $name;
            }
        }

        if ($search_type)
            $job_info .= " Search=$search_type";
        if ($ref_db)
            $job_info .= " RefDB=$ref_db";

        $job_action_code = "";
        if ($allow_cancel) {
            if (!$is_finished) {
                $job_action_code = "<div style=\"float:right\" class=\"cancel-btn\" data-type=\"gnn\" title=\"Cancel Job\" data-id=\"$id\" data-key=\"$key\"";
                if ($quantify_id)
                    $job_action_code .= " data-quantify-id=\"$quantify_id\"";
                $job_action_code .= "><i class=\"fas fa-stop-circle cancel-btn\"></i></div>";
            } else {
                $job_action_code = "<div style=\"float:right\" class=\"archive-btn\" data-type=\"gnn\" data-id=\"$id\" data-key=\"$key\"";
                if ($quantify_id)
                    $job_action_code .= ' data-quantify-id="' . $quantify_id . '"';
                $job_action_code .= "title=\"Archive Job\"><i class=\"fas fa-trash-alt\"></i></div>";
            }
        }
        

        echo <<<HTML
                    <tr style="background-color: $last_bg_color">
                        <td>$link_start${id_field}$link_end</td>
                        <td $name_style>$link_start<span class='job-name'>$job_name</span><br><span class='job-metadata'>$job_info</span>$link_end</td>
                        <td>$date_completed $job_action_code</td>
                    </tr>
HTML;
    }
}

include_once("tutorial/refs.inc.php");

echo "<hr>\n";

require_once("inc/footer.inc.php");


?>

